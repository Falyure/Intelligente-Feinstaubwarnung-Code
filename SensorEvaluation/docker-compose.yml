version: "3.7"
services:
  db:
    image: timescale/timescaledb:latest-pg12
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME} 
      POSTGRES_USER: ${DB_USER} 
      POSTGRES_PASSWORD: ${DB_PASSWD}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - db-data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - docker_network
  
  pgadmin:
    image: dpage/pgadmin4:4.29
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ADMIN_MAIL}
      PGADMIN_DEFAULT_PASSWORD: ${ADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - docker_network
    links:
      - "db:pgsql-server"
  
  update_job:
    container_name: update_job
    build: 
      context: ./UpdateScript
      args:
        - ARG_DB_HOST=${DB_HOST}
        - ARG_DB_PORT=${DB_PORT}
        - ARG_DB_NAME=${DB_NAME}
        - ARG_DB_USER=${DB_USER}
        - ARG_DB_PASSWD=${DB_PASSWD}
    depends_on:
      - ofelia 
    networks:
      - docker_network

  grafana:
    build:
      context: ./Grafana
    container_name: grafana
    restart: always
    ports:
      - 3000:3000
    environment:
      - GF_INSTALL_PLUGINS=grafana-worldmap-panel
    volumes:
      - grafana-data:/var/lib/graf
    networks:
      - docker_network
    depends_on:
      - db 

  ofelia:
    image: mcuadros/ofelia:latest
    depends_on:
      - db 
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      ofelia.job-run.update_job_service.schedule: "@every 30m"
      ofelia.job-run.update_job_service.container: "update_job"


networks:
  docker_network:
    driver: bridge 

volumes:
  db-data:
  pgadmin-data:
  grafana-data: